name: Pull Request Workflow
on: 
  pull_request:
    types: [opened, synchronize, reopened, closed]
jobs: 
  prdata:
    name: Submit Pull Request Data
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Extract Last Release Commit And Prepare List Of Commits
        id: extract-commits
        shell: bash
        run: |
          cd ${{ inputs.path }}
          dobuild=false
          echo -n "-i ${{ inputs.reliza_api_id }} -k ${{ inputs.reliza_api_key }} -u ${{ inputs.reliza_api_url }} -b ${{github.ref_name}}"  > get_latest_release_cmd
          if [ ! -z ${{inputs.reliza_project_id}} ]
          then
            echo " --project ${{inputs.reliza_project_id}} " >> get_latest_release_cmd
          fi
          
          echo -n "reliza-cli getlatestrelease $(cat get_latest_release_cmd) " >> get_latest_release_exec
          latest_release=$(eval "$(cat get_latest_release_exec)")
          echo "latest_release: $latest_release"
          last_commit=$(echo $latest_release | jq -r ".sourceCodeEntryDetails.commit")
          if [ ! -z "$last_commit" ] && [ "null" != "$last_commit" ]
          then
            echo -n "--commits $(git log $last_commit..${{github.sha}} --date=iso-strict --pretty='%H|||%ad|||%s' -- ./ | base64 -w 0) " > get_version_command
            difflines=$(git diff $last_commit..${{github.sha}} ./ | wc -l)
            if [ "$difflines" != "0" ]
            then
              dobuild=true
            fi
          else
            dobuild=true
          fi
          echo "DO_BUILD=$dobuild" >> $GITHUB_ENV
          echo "LAST_COMMIT=$last_commit" >> $GITHUB_ENV
          echo "reliza_do_build=$dobuild" >> $GITHUB_OUTPUT
          echo "reliza_last_commit=$last_commit" >> $GITHUB_OUTPUT
      - name: Submit Pull Request Data
        run: |
          set -e
          set -x
         
          PR_HEAD_COMMIT=${{ github.event.pull_request.head.sha }}
        
          rlzclientout=$(docker run --rm relizaio/reliza-cli    \
          getlatestrelease    \
          -i ${{ secrets.RELIZA_API_ID }} \
          -k ${{ secrets.RELIZA_API_KEY }} \
          -u ${{ secrets.RELIZA_API_URL }} \
          --branch ${{ github.head_ref }} \
          --project ${{ secrets.RELIZA_PROJECT_ID }} \
          ); \
          echo $(echo $rlzclientout)
          echo "--commits $(gh pr view ${{ github.event.number }} --json commits | jq '.commits | map(.oid) | join(",")')" > reliza_command 
          echo "--number ${{ github.event.number }} " >> reliza_command
          echo "--endpoint ${{ github.event.pull_request.html_url }} " >> reliza_command
          echo "--branch ${{ github.head_ref }} " >> reliza_command
          echo "--targetBranch ${{ github.base_ref }} " >> reliza_command
          echo "--state ${{ github.event.pull_request.state }} " >> reliza_command
          echo "--title ${{ github.event.pull_request.title }} " >> reliza_command
          if ${{ github.event.pull_request.closed_at != '' }} ; then
            echo "--closedDate ${{ github.event.pull_request.closed_at }} " >> reliza_command
          fi
          echo "--createdDate ${{ github.event.pull_request.created_at }} " >> reliza_command
          if ${{ github.event.pull_request.merged_at != ''}} ; then
            echo "--mergedDate ${{ github.event.pull_request.merged_at }} " >> reliza_command
          fi
          # echo "--draft ${{ github.event.pull_request.draft }} " >> reliza_command
          echo "-i ${{ secrets.RELIZA_API_ID }} -k ${{ secrets.RELIZA_API_KEY }} -u ${{ secrets.RELIZA_API_URL }} --project ${{ secrets.RELIZA_PROJECT_ID }}" >> reliza_command
          echo docker run --rm relizaio/reliza-cli prdata $(cat reliza_command) > rlz_cmd_exec
          eval $(cat rlz_cmd_exec)
          